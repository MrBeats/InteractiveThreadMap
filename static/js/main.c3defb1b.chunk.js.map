{"version":3,"sources":["Corona/country-codes.csv","Institutions/InstitutionData_Ext.csv","FireData/Feuer.csv","Terror/globalterrorismdb_0919dist.csv","Corona/20200204-205200-bno-2019ncov-data.csv","Corona/world.csv","Institutions/Institutions.jsx","FireData/Fire.jsx","Terror/Terror.jsx","Corona/Corona.jsx","InstitutionFocusBar/InstitutionFocusBar.jsx","Visualisation/Visualisation.jsx","Page/Page.jsx","App/App.jsx","serviceWorker.jsx","index.jsx"],"names":["module","exports","readInstitutionData","a","d3","extData","then","data","filter","institution","Latitude","Longitude","updateInstitutions","csvData","map","div","context","d3Data","d","coord","projectOnMap","x","y","customBase","document","createElement","custom","circles","selectAll","lon","parseFloat","replace","lat","project","mapboxgl","enter","append","attr","exit","remove","clearRect","each","i","node","this","fillStyle","beginPath","arc","Math","PI","fill","checkIfExists","e","res","datapoint","x1","parseInt","y1","x2","point","y2","length","readFireData","fireData","updateFire","longitude","latitude","fillRect","readTerrorData","terrorData","attacks","updateTerror","readCoronaWorldData","coronaWorldData","countryCodesData","ISO","iso","forEach","filtered","name","place","ISO3","alpha3","console","log","readCountryCodesData","updateCorona","coronaData","addLayer","setFilter","concat","matrix","col","column","push","getCol","InstitutionFocusBar","props","getAllChoices","bind","getOptions","chooseInstitution","state","inputString","options","choices","refs","focusForm","onsubmit","Institutions","setState","c","toLowerCase","includes","current","flyTo","ref","id","type","list","placeholder","value","onChange","target","onSubmit","o","key","React","Component","Visualisation","createMap","flyToLatLon","InstMapMove","FireMapMove","TerrorMapMove","InstCanvas","FireCanvas","TerrorCanvas","container","style","center","zoom","essential","isStyleLoaded","getLayoutProperty","setLayoutProperty","canvas","layer","off","on","scrollZoom","enable","NavigationControl","nav","addControl","getCanvasContainer","InstitutionData","Fire","FireData","Terror","TerrorData","Corona","CoronaWorldData","InstitutionContext","getContext","institutionsUnderMouse","transition","duration","htmlString","inst","Adresse","html","FireContext","TerrorContext","CoronaCanvas","color","defaultChecked","changeCanvasVisibility","mapLayerToggle","width","height","margin","top","bottom","Page","onEnter","changeBackground","className","href","title","PureComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3defb1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/country-codes.962d8880.csv\";","module.exports = __webpack_public_path__ + \"static/media/InstitutionData_Ext.34fc1e76.csv\";","module.exports = __webpack_public_path__ + \"static/media/Feuer.450f8575.csv\";","module.exports = __webpack_public_path__ + \"static/media/globalterrorismdb_0919dist.abf417b4.csv\";","module.exports = __webpack_public_path__ + \"static/media/20200204-205200-bno-2019ncov-data.42bb2e17.csv\";","module.exports = __webpack_public_path__ + \"static/media/world.e8b88829.csv\";","import React from \"react\";\nimport * as d3 from \"d3\";\nimport extData from \"./InstitutionData_Ext.csv\";\nimport * as mapboxgl from \"mapbox-gl\";\n\nexport async function readInstitutionData() {\n    return await d3.dsv(\";\", extData).then(function(data){\n        return data.filter(institution => institution.Latitude !== \"failed\" && institution.Longitude !== \"failed\")\n    })\n}\n\nexport function updateInstitutions(csvData,map,div,context) {\n    let d3Data = csvData.filter(function(d){let coord =  projectOnMap([d.Longitude,d.Latitude]); return ((coord.x <= 1400 && coord.x >= 0) && (coord.y <= 800 && coord.x >= 0))})\n\n    let customBase = document.createElement('custom')\n    let custom = d3.select(customBase)\n\n    let circles = custom.selectAll(\"custom.circle\")\n        .data(d3Data)\n\n    circles\n        .enter()\n        .append(\"circle\")\n        .attr(\"r\", 4)\n        .attr(\"stroke\", \"black\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"fill\", \"red\")\n        .attr(\"opacity\", 0.7)\n        .attr(\"cx\", function(d) { return projectOnMap([d.Longitude,d.Latitude]).x; })\n        .attr(\"cy\", function(d) { return projectOnMap([d.Longitude,d.Latitude]).y; })\n\n    circles\n        .exit()\n        .remove()\n\n    circles\n        .attr(\"cx\", function(d) { return projectOnMap([d.Longitude,d.Latitude]).x; })\n        .attr(\"cy\", function(d) { return projectOnMap([d.Longitude,d.Latitude]).y; })\n\n    // Draw on Canvas\n    context.clearRect(0, 0, 1400, 800)\n    let elements = custom.selectAll('circle')\n    elements.each(function(d,i) {\n        let node = d3.select(this)\n        context.fillStyle = 'black'\n        context.beginPath();\n        context.arc(node.attr('cx'), node.attr('cy'), 2, 0, 2 * Math.PI)\n        context.fill();\n    })\n\n    function projectOnMap(d) {\n        const lon = parseFloat(d[0].replace(/,/g, '.'));\n        const lat = parseFloat(d[1].replace(/,/g, '.'));\n\n        return map.project(new mapboxgl.LngLat(lon, lat));\n    }\n}\n\nexport function checkIfExists(e,data,map) {\n    function projectOnMap(d) {\n        const lon = parseFloat(d[0].replace(/,/g, '.'));\n        const lat = parseFloat(d[1].replace(/,/g, '.'));\n\n        return map.project(new mapboxgl.LngLat(lon, lat));\n    }\n    let res = data.filter(d => {\n        let datapoint = projectOnMap([d.Longitude,d.Latitude])\n        let x1 = parseInt(datapoint.x)\n        let y1 = parseInt(datapoint.y)\n        let x2 = parseInt(e.point.x)\n        let y2 = parseInt(e.point.y)\n        return x2 > x1 - 2 && x2 < x1 + 2 && y2 > y1 - 2 && y2 < y1 + 2\n        //return x1 === x2 && y1 === y2\n    })\n    if (res.length === 0) {\n        return false\n    }\n    else {\n        return res\n    }\n\n}\n\n\n","import * as d3 from \"d3\";\nimport fireData from \"./Feuer.csv\";\nimport * as mapboxgl from \"mapbox-gl\";\n\nexport async function readFireData() {\n    return await d3.dsv(\",\", fireData)\n}\n\nexport function updateFire(csvData,map,div,context) {\n    let d3Data = csvData.filter(function(d){let coord =  projectOnMap([d.longitude,d.latitude]); return ((coord.x <= 1400 && coord.x >= 0) && (coord.y <= 800 && coord.x >= 0))})\n\n    let customBase = document.createElement('custom2')\n    let custom = d3.select(customBase)\n\n    let circles = custom.selectAll(\"custom2.rect\")\n        .data(d3Data)\n\n\n    circles\n        .enter()\n        .append(\"rect\")\n        .attr(\"r\", 1)\n        .attr(\"stroke\", \"black\")\n        .attr(\"stroke-width\", 1)\n        .attr(\"fill\", \"black\")\n        .attr(\"opacity\", 0.7)\n        .attr(\"cx\", function(d) { return projectOnMap([d.longitude,d.latitude]).x; })\n        .attr(\"cy\", function(d) { return projectOnMap([d.longitude,d.latitude]).y; })\n\n\n    circles\n        .exit()\n        .remove()\n\n    circles\n        .attr(\"cx\", function(d) { return projectOnMap([d.longitude,d.latitude]).x; })\n        .attr(\"cy\", function(d) { return projectOnMap([d.longitude,d.latitude]).y; })\n\n    // Draw on Canvas\n    context.clearRect(0, 0, 1400, 800)\n    let elements = custom.selectAll('rect')\n    elements.each(function(d,i) {\n        let node = d3.select(this)\n        context.fillStyle = 'red'\n        context.beginPath();\n        context.fillRect(node.attr('cx'), node.attr('cy'), node.attr('r'),node.attr('r'))\n    })\n\n    function projectOnMap(d) {\n        const lon = parseFloat(d[0]);\n        const lat = parseFloat(d[1]);\n\n        return map.project(new mapboxgl.LngLat(lon, lat));\n    }\n}\n","import * as d3 from \"d3\";\nimport terrorData from \"./globalterrorismdb_0919dist.csv\";\nimport * as mapboxgl from \"mapbox-gl\";\n\nexport async function readTerrorData() {\n    return await d3.dsv(\";\", terrorData).then(function(data){\n        return data.filter(attacks => attacks.latitude !== \"\" && attacks.longitude !== \"\")\n    })\n}\n\nexport function updateTerror(csvData,map,div,context) {\n    let d3Data = csvData.filter(function(d){ let coord =  projectOnMap([d.longitude,d.latitude]); return ((coord.x <= 1400 && coord.x >= 0) && (coord.y <= 800 && coord.x >= 0))})\n\n    let customBase = document.createElement('custom3')\n    let custom = d3.select(customBase)\n\n    let circles = custom.selectAll(\"custom3.rect\")\n        .data(d3Data)\n\n    circles\n        .enter()\n        .append(\"rect\")\n        .attr(\"r\", 1)\n        .attr(\"stroke\", \"black\")\n        .attr(\"stroke-width\", 1)\n        .attr(\"fill\", \"black\")\n        .attr(\"opacity\", 0.7)\n        .attr(\"cx\", function(d) { return projectOnMap([d.longitude,d.latitude]).x; })\n        .attr(\"cy\", function(d) { return projectOnMap([d.longitude,d.latitude]).y; })\n\n\n    circles\n        .exit()\n        .remove()\n\n    circles\n        .attr(\"cx\", function(d) { return projectOnMap([d.longitude,d.latitude]).x; })\n        .attr(\"cy\", function(d) { return projectOnMap([d.longitude,d.latitude]).y; })\n\n    // Draw on Canvas\n    context.clearRect(0, 0, 1400, 800)\n    let elements = custom.selectAll('rect')\n    elements.each(function(d,i) {\n        let node = d3.select(this)\n        context.fillStyle = 'green'\n        context.beginPath();\n        context.fillRect(node.attr('cx'), node.attr('cy'), node.attr('r'), node.attr('r'))\n    })\n\n    function projectOnMap(d) {\n        const lon = parseFloat(d[0].replace(/,/g, '.'));\n        const lat = parseFloat(d[1].replace(/,/g, '.'));\n\n        return map.project(new mapboxgl.LngLat(lon, lat));\n    }\n}\n","import * as d3 from \"d3\";\nimport coronaWorldData from './20200204-205200-bno-2019ncov-data.csv';\nimport countryCodesData from './country-codes.csv';\nimport ISO from './world.csv';\nimport * as mapboxgl from \"mapbox-gl\";\n\nexport async function readCoronaWorldData() {\n    let data = await d3.dsv(\"|\", coronaWorldData)\n    let codes = await d3.dsv(\"|\", countryCodesData)\n    let iso = await d3.dsv(\",\", ISO)\n\n    data.forEach(d => {\n        const filtered = iso.filter(i => i.name === d.place)[0]\n        d.ISO3 = filtered ? filtered.alpha3 : \"\"\n        console.log(d.ISO3)\n    })\n\n    //console.log(data)\n    return data\n}\n\nexport async function readCountryCodesData() {\n    return await d3.dsv(\"|\", countryCodesData)\n}\n\nfunction getCol(matrix, col){\n  var column = [];\n  for(var i=0; i<matrix.length; i++){\n     column.push(matrix[i][col]);\n  }\n  return column;\n}\n\nexport function updateCorona(coronaData, map){\n    return (map.addLayer({ //here we are adding a layer containing the tileset we just uploaded\n        'id': 'corona',\n        'source': {\n          'type': 'vector',\n          'url': 'mapbox://byfrost-articles.74qv0xp0'\n        },\n        'source-layer': 'ne_10m_admin_0_countries-76t9ly',\n        'type': 'fill',\n        'paint': {\n          'fill-color': '#52489C', //this is the color you want your tileset to have (I used a nice purple color)\n          'fill-outline-color': '#F2F2F2', //this helps us distinguish individual countries a bit better by giving them an outline\n            'fill-opacity': 0.4\n        }\n      }),\n      map.setFilter('corona', ['in', 'ADM0_A3_IS'].concat(getCol(coronaData, 'ISO3')))\n)}\n","import './InstitutionFocusBar.css'\nimport React from 'react';\nimport * as Institutions from \"../Institutions/Institutions\";\nimport * as mapboxgl from \"mapbox-gl\";\n\nclass InstitutionFocusBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getAllChoices = this.getAllChoices.bind(this);\n        this.getCol = this.getCol.bind(this);\n        this.getOptions = this.getOptions.bind(this);\n        this.chooseInstitution = this.chooseInstitution.bind(this);\n\n        this.state = {\n            inputString: \"\",\n            options: [],\n            choices: [],\n        }\n\n    }\n    componentDidMount() {\n        this.refs.focusForm.onsubmit = () => this.chooseInstitution();\n        this.getAllChoices()\n    }\n\n    async getAllChoices() {\n        let choices = await Institutions.readInstitutionData()\n        this.setState({\n            choices: choices\n        })\n    }\n\n    getOptions() {\n        const {choices,inputString,options} = this.state;\n        if (choices != null) {\n            this.setState({options: this.getCol(choices.filter(c => c.name.toLowerCase().includes(inputString.toLowerCase())),'name')},() => {\n                if (this.state.options.length == 1) {\n                    this.chooseInstitution()\n                }\n            })\n        }\n        else {\n            this.setState({options: []})\n        }\n    }\n\n    chooseInstitution() {\n        const {choices,options} = this.state;\n        if(options[0])\n        {\n        const current = choices.filter(c => c.name == options[0])\n        if(current[0])\n            {\n                this.props.flyTo(\n                    parseFloat(current[0].Latitude.replace(/,/g, '.')),\n                    parseFloat(current[0].Longitude.replace(/,/g, '.'))\n                )\n            }\n        }\n        return false\n    }\n\n    getCol(matrix, col){\n        let column = [];\n        for(let i=0; i<matrix.length; i++){\n            column.push(matrix[i][col]);\n        }\n        return column;\n    }\n\n    render() {\n        const {options} = this.state;\n\n        return (\n            <div>\n                <form ref='focusForm' id=\"input\">\n                    <label id='toggleFire'>\n                        Look up an Institute:\n                        <br/>\n                        <input type=\"text\" name=\"name\" id=\"name_input\" list=\"huge_list\" placeholder='Type an institution' value={this.state.inputString}\n                               onChange={(e) => {\n                                   this.setState({ inputString: e.target.value }, () => {\n                                       this.getOptions()\n                                   })\n                               }}\n                               onSubmit={(e) => {\n                                   this.setState({ inputString: e.target.value }, () => {\n                                       this.chooseInstitution()\n                                   })\n                               }}\n                        />\n                        <datalist id=\"huge_list\">\n                            {\n                                options.length < 15 ?\n                                    options.map((o,i) => {\n                                        return (<option key={i} value={o} />)\n                                    }) : <div></div>\n                            }\n                        </datalist>\n                    </label>\n\n                </form>\n            </div>\n        )\n\n    }\n}\nexport default InstitutionFocusBar\n","import React from 'react'\nimport * as mapboxgl from \"mapbox-gl\"\nimport * as d3 from \"d3\"\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport './Visualisation.css'\n\nimport * as Institutions from '../Institutions/Institutions'\nimport * as Fire from '../FireData/Fire'\nimport * as Terror from '../Terror/Terror'\nimport * as Corona from '../Corona/Corona'\nimport InstitutionFocusBar from \"../InstitutionFocusBar/InstitutionFocusBar\";\n\n class Visualisation extends React.Component {\n     constructor (){\n         super()\n         this.createMap = this.createMap.bind(this)\n         this.flyToLatLon = this.flyToLatLon.bind(this);\n\n         this.state = {\n             map: null,\n             InstMapMove: () => {},\n             FireMapMove: () => {},\n             TerrorMapMove: () => {},\n\n             InstCanvas: null,\n             FireCanvas: null,\n             TerrorCanvas: null,\n         }\n     }\n\n     async componentDidMount() {\n         mapboxgl.accessToken = 'pk.eyJ1IjoiZW5qYWxvdCIsImEiOiJjaWhtdmxhNTIwb25zdHBsejk0NGdhODJhIn0.2-F2hS_oTZenAWc0BMf_uw'\n         this.setState({\n             map: new mapboxgl.Map({\n                 container: 'map', // container id\n                 style: 'mapbox://styles/enjalot/cihmvv7kg004v91kn22zjptsc',\n                 center: [10, 52],\n                 zoom: 5.3,\n             })\n         },async () => {\n             await this.createMap()\n         })\n\n     }\n\n     flyToLatLon(lat,lon) {\n         const {map} = this.state\n         map.flyTo({\n             center: new mapboxgl.LngLat(lon, lat),\n             essential: true,\n             zoom: 9\n         });\n     }\n\n     mapLayerToggle(name) {\n         const {map} = this.state\n         if(map) {\n             if(map.isStyleLoaded()) {\n                 if (name === \"Corona\") {\n                     if (map.getLayoutProperty(\"corona\",\"visibility\") === \"none\") {\n                         map.setLayoutProperty(\"corona\", 'visibility', 'visible');\n                     }\n                     else {\n                         map.setLayoutProperty(\"corona\", 'visibility', 'none');\n                     }\n                 }\n             }\n         }\n\n     }\n\n     changeCanvasVisibility(canvas,layer) {\n         console.log(canvas,layer)\n         if(canvas){\n             if(canvas.style(\"display\") !== \"none\") {\n                 canvas.style(\"display\", \"none\")\n                 const {map} = this.state\n                 if (layer === \"Institute\") {\n                     map.off(\"viewreset\", this.state.InstMapMove)\n                     map.off(\"move\", this.state.InstMapMove)\n                 }\n                 else if (layer === \"Fire\") {\n                     map.off(\"viewreset\", this.state.FireMapMove)\n                     map.off(\"move\", this.state.FireMapMove)\n                 }\n                 else if (layer === \"Terror\") {\n                     map.off(\"viewreset\", this.state.TerrorMapMove)\n                     map.off(\"move\", this.state.TerrorMapMove)\n                 }\n\n             } else {\n                 canvas.attr(\"style\",\"null\")\n                 canvas.style(\"display\", \"null\")\n                 const {map} = this.state\n                 if (layer === \"Institute\") {\n                     map.on(\"viewreset\", this.state.InstMapMove)\n                     map.on(\"move\", this.state.InstMapMove)\n                     this.state.InstMapMove()\n                 }\n                 else if (layer === \"Fire\") {\n                     map.on(\"viewreset\", this.state.FireMapMove)\n                     map.on(\"move\", this.state.FireMapMove)\n                     this.state.FireMapMove()\n                 }\n                 else if (layer === \"Terror\") {\n                     map.on(\"viewreset\", this.state.TerrorMapMove)\n                     map.on(\"move\", this.state.TerrorMapMove)\n                     this.state.TerrorMapMove()\n                 }\n             }\n         }\n     }\n\n     async createMap() {\n         const {map} = this.state\n         // Karte erstellen -------------------------------------------------------------------------------------------\n         map.scrollZoom.enable()\n         map.NavigationControl = new mapboxgl.NavigationControl()\n\n         let nav = new mapboxgl.NavigationControl();\n         map.addControl(nav, 'top-left');\n         let container = map.getCanvasContainer()\n\n         // Aquire Data -----------------------------------------------------------------------------------------------\n         let InstitutionData = await Institutions.readInstitutionData()\n         let FireData = await Fire.readFireData()\n         let TerrorData = await Terror.readTerrorData()\n         let CoronaWorldData = await Corona.readCoronaWorldData()\n         let CountryCodes = await Corona.readCountryCodesData()\n\n         // Create Institution Canvas ---------------------------------------------------------------------------------\n         this.setState({InstCanvas: d3.select(container).append(\"canvas\").attr('width', 1400).attr('height', 800)}, () => {\n             let InstitutionContext = this.state.InstCanvas.node().getContext('2d')\n             let div = d3.select(\"#map\").append(\"div\")\n                 .attr(\"class\", \"tooltip\")\n                 .style(\"opacity\", 0)\n\n             this.setState({InstMapMove: () => Institutions.updateInstitutions(InstitutionData,map,div,InstitutionContext)}, () => {\n                 map.on(\"viewreset\", this.state.InstMapMove)\n                 map.on(\"move\", this.state.InstMapMove)\n             })\n\n             map.on('mousemove', function(e) {\n                 let institutionsUnderMouse = Institutions.checkIfExists(e,InstitutionData,map)\n                 if (institutionsUnderMouse !== false) {\n                     div.transition()\n                         .duration(200)\n                         .style(\"opacity\", .9)\n                     let htmlString = \"\"\n\n                     institutionsUnderMouse.forEach(inst => htmlString += inst.name + \"<br/>\" + inst.Adresse + \"<br/><br/>\")\n\n                     div.html(htmlString)\n                         .style(\"left\", (e.point.x + 50) + \"px\")\n                         .style(\"top\", (e.point.y - 28) + \"px\")\n                         .style(\"height\", (institutionsUnderMouse.length * 65) + \"px\")\n                 }\n                 else {\n                     div.transition()\n                         .duration(500)\n                         .style(\"opacity\", 0);\n                 }\n             })\n             Institutions.updateInstitutions(InstitutionData,map,div,InstitutionContext)\n         })\n         // Create Fire Canvas ----------------------------------------------------------------------------------------\n         this.setState({FireCanvas: d3.select(container).append(\"canvas\").attr('width', 1400).attr('height', 800)}, () => {\n             let FireContext = this.state.FireCanvas.node().getContext('2d')\n\n             this.setState({FireMapMove: () => Fire.updateFire(FireData,map,[],FireContext)}, () => {\n                 map.on(\"viewreset\", this.state.FireMapMove)\n                 map.on(\"move\", this.state.FireMapMove)\n             })\n\n             Fire.updateFire(FireData,map,[],FireContext)\n         })\n         // Create Terror Canvas --------------------------------------------------------------------------------------\n         this.setState({TerrorCanvas: d3.select(container).append(\"canvas\").attr('width', 1400).attr('height', 800)}, () => {\n             let TerrorContext = this.state.TerrorCanvas.node().getContext('2d')\n\n             this.setState({TerrorMapMove: () => Terror.updateTerror(TerrorData,map,[],TerrorContext)}, () => {\n                 map.on(\"viewreset\", this.state.TerrorMapMove)\n                 map.on(\"move\", this.state.TerrorMapMove)\n             })\n\n             Terror.updateTerror(TerrorData,map,[],TerrorContext)\n         })\n         // Do First Data Update --------------------------------------------------------------------------------------\n         console.log(CoronaWorldData,map)\n         Corona.updateCorona(CoronaWorldData,map)\n    }\n\n     render() {\n        const {map,InstCanvas, FireCanvas, TerrorCanvas, CoronaCanvas} = this.state\n        return (\n            <div>\n                <div id='searchbar'>\n                    <InstitutionFocusBar flyTo={this.flyToLatLon}/>\n                </div>\n                <div id='boxes'>\n                    <label id='toggleFire'>\n                    <span style={{color: '#ff0000'}}>Show fire data</span>\n                        <input type=\"checkbox\" defaultChecked={FireCanvas?FireCanvas.style(\"display\") != \"none\":true} onChange={() => this.changeCanvasVisibility(FireCanvas,\"Fire\")} />\n                    </label>\n                    <label id='toggleTerror'>\n                    <span style={{color: '#339966'}}>Show terror data</span>\n                        <input type=\"checkbox\" defaultChecked={TerrorCanvas?TerrorCanvas.style(\"display\") != \"none\":true} onChange={() => this.changeCanvasVisibility(TerrorCanvas,\"Terror\")} />\n                    </label>\n                    <label id='toggleCorona'>\n                    <span style={{color: '#7c73bf'}}>Show corona data</span>\n                        <input type=\"checkbox\" defaultChecked={map?map.getLayoutProperty(\"corona\",\"visibility\") == \"visible\":true} onChange={() => this.mapLayerToggle(\"Corona\")} />\n                    </label>\n                </div>\n                <div style={{\n                    width: '1400px',\n                    height: '800px',\n                    margin: '0 auto',\n                }}>\n                    <div id=\"map\" ref=\"karte\" style={{\n                        top: 0,\n                        bottom: 0,\n                        width: '1400px',\n                        height: '800px',\n                    }}>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Visualisation\n","import React from 'react';\nimport * as d3 from \"d3\";\nimport './Page.css';\nimport { Waypoint } from 'react-waypoint';\nimport Visualisation from '../Visualisation/Visualisation';\n\nclass Page extends React.PureComponent {\n    componentDidMount(){\n\n    }\n\n    changeBackground(layer){\n        let container = d3.select(\"#header\")\n        if(layer === \"Topic\"){\n            container.attr(\"class\", \"topic\")\n        }\n        if(layer === \"Institutions\"){\n            container.attr(\"class\", \"institutions\")\n        }\n        if(layer === \"Fire\"){\n            container.attr(\"class\", \"fire\")\n        }\n        if(layer === \"Terror\"){\n            container.attr(\"class\", \"terror\")\n        }\n        if(layer === \"Corona\"){\n            container.attr(\"class\", \"corona\")\n        }\n        if(layer === \"Map\"){\n            container.attr(\"class\", \"map\")\n        }\n    }\n    \n    render() {\n        return (\n            <div id={\"container\"} >\n                <Waypoint onEnter={this.changeBackground.bind(this,\"Topic\")} />\n                <div className={\"containerItem\"}>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <h1 id='top'>Interactive threat map</h1>\n                </div>\n\n                <Waypoint onEnter={this.changeBackground.bind(this,\"Institutions\")} />\n                <div className={\"containerItem\"}>\n                    <h1>Institutions</h1>\n                    <br />\n                    <br />\n                    <p><strong>Mit weit &uuml;ber 6000 Partner-Instituten ist die <a href=\"https://www.dfg.de/\">DFG</a> international sehr <br />breit aufgestellt. Aufgrund ihrer geographischen Lage sind die Institute<br /> verschiedensten Gefahren ausgesetzt. Um einen sicheren Forschungsstandort zu finden,<br /> ist es vorteilhaft sich vorab &uuml;ber bestehende Risiken zu informieren.</strong></p>\n                    <p><strong>Die Daten f&uuml;r die Visualierung stammen dabei aus dem zur Verf&uuml;gung gestellten <a href=\"https://gepris.dfg.de/gepris/OCTOPUS\">GEPRIS</a> Datensatz des DFG.</strong></p>\n                </div>\n                <Waypoint onEnter={this.changeBackground.bind(this,\"Fire\")} />\n                <div className={\"containerItem\"}>\n                    <h1>Fire</h1>\n                    <br />\n                    <br />\n                    <strong>\n                        <p>Die erste Gefahr welche in dieser Visualisierung dargestellt wird, ist <span style={{color: '#ff0000'}}>Feuer</span>. Zu den bei trockenem<br /> Klima sich j&auml;hrlich wiederholenden Br&auml;nden z.B. in den USA kamen im Jahr 2019 viele noch gr&ouml;&szlig;ere<br /> und gewaltigere Feuer-Katastrophen hinzu. Dazu z&auml;hlen unter anderem die Waldbr&auml;nde im Amazonas,<br /> oder die extremen Buschbr&auml;nde in Australien, welche bis heute nicht gel&ouml;scht werden<br /> konnten und f&uuml;r viel Zerst&ouml;rung und Leid sorgen.</p>\n                        <p>Die Nasa stellt hierzu eine&nbsp;<a href=\"https://firms.modaps.eosdis.nasa.gov/map/#z:3;c:0.7,4.0;d:2020-02-11..2020-02-12\">\"Feuer-Karte\"</a>&nbsp;bereit, welche mithilfe der Daten aus dem<br /> &nbsp;<a href=\"https://modis.gsfc.nasa.gov/\">Moderate Resolution Imaging Spectroradiometer</a>&nbsp;und der <br />&nbsp;<a href=\"https://www.jpss.noaa.gov/viirs.html\">Visible Infrared Imaging Radiometer Suite</a>&nbsp;aktuelle Daten der letzten 24h, 48h und 7 Tagen visualisiert.<br /> Diese Daten haben wir in unsere Gefahren-Karte gemappt,<br /> um die Gefahr von Feuern f&uuml;r Institute zu visualisieren.</p>\n                    </strong>.\n                </div>\n                <Waypoint onEnter={this.changeBackground.bind(this,\"Terror\")} />\n                <div className={\"containerItem\"}>\n                    <h1>Terrorism</h1>\n                    <br />\n                    <br />\n                    <br />\n                    <p><strong>In Zeiten, in denen sich Terror-Organisationen wie der IS ausbreiten und ganze Staaten zerfallen,<br /> ist der <span style={{color: '#339966'}}>Terrorismus</span> ebenfalls eine sehr gro&szlig;e Gefahr in der heutigen Welt. Das <br />&nbsp;<a title=\"National Consortium for the Study of Terrorism and Responses to Terrorism\" href=\"https://www.start.umd.edu/\">National Consortium for the Study of Terrorism and Responses to Terrorism</a>&nbsp;(START) hat hierbei<br /> zu Forschungszwecken eine Datenbank aufgebaut, welche nahezu alle terroristischen<br /> Anschl&auml;ge auf der ganzen Welt seit 1970 dokumentiert. Zus&auml;tzlich enth&auml;lt der Datensatz oft<br /> viele Zusatzinformationen, wie die Zahl der Todesopfer, das Anschlagsziel oder die Angriffsart.<br /> Die Daten k&ouml;nnen dabei in der <a href=\"https://www.start.umd.edu/gtd/\">Global Terrorism Database (GTD)</a> eingesehen werden.</strong></p>\n                </div>\n                <Waypoint onEnter={this.changeBackground.bind(this,\"Corona\")} />\n                <div className={\"containerItem\"}>\n                    <h1>Corona</h1>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <p><strong>Der <span style={{color: '#7c73bf'}}>Corona</span> Virus (2019-nCoV) ist wohl die neueste und aktuellste Gefahr.<br /> Der erstmals in China aufgetretene Virus der Familie der&nbsp;<em>Coronaviridae&nbsp;</em>hat allein in<br /> China bereits mehrere zehntausend Menschen infiziert und schon &uuml;ber<br /> tausend Todesopfer gefordert (<a href=\"https://www.who.int/docs/default-source/coronaviruse/situation-reports/20200212-sitrep-23-ncov.pdf?sfvrsn=41e9fb78_2\">Stand Februar 2020</a>). Auch wenn au&szlig;erhalb Chinas noch<br /> nicht viele F&auml;lle bekannt sind, stellt dieser Virus eine Gefahr f&uuml;r die Institute<br /> und Ihre Mitarbeiter dar. Unsere Daten werden dabei aus einer unabh&auml;ngigen und regelm&auml;&szlig;ig<br /> aktualisierten <a href=\"https://github.com/globalcitizen/2019-wuhan-coronavirus-data\">Quelle</a> bezogen und enthalten neben den Zahlen auch die Herkunft s&auml;mtlicher Daten.</strong></p>\n                </div>\n                <Waypoint onEnter={this.changeBackground.bind(this,\"Map\")} />\n                <div className={\"containerItem\"}>\n                    <h1>Map</h1>\n                    <Visualisation/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Page\n","import React from 'react';\nimport Page from '../Page/Page';\nimport './App.css';\nimport Visualisation from '../Visualisation/Visualisation';\n\nfunction App() {\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <img id=\"header\"/>\n          <Page/>\n      </header>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}